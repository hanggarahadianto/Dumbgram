[{"D:\\Project\\Dumbgram\\client\\src\\index.js":"1","D:\\Project\\Dumbgram\\client\\src\\App.js":"2","D:\\Project\\Dumbgram\\client\\src\\Pages\\LandingPage.jsx":"3","D:\\Project\\Dumbgram\\client\\src\\Pages\\Home.jsx":"4","D:\\Project\\Dumbgram\\client\\src\\Components\\Header.jsx":"5","D:\\Project\\Dumbgram\\client\\src\\Components\\Navbar.jsx":"6","D:\\Project\\Dumbgram\\client\\src\\Components\\Profile.jsx":"7"},{"size":254,"mtime":1652269687884,"results":"8","hashOfConfig":"9"},{"size":415,"mtime":1652316835345,"results":"10","hashOfConfig":"9"},{"size":7756,"mtime":1652564066675,"results":"11","hashOfConfig":"9"},{"size":3893,"mtime":1652614862962,"results":"12","hashOfConfig":"9"},{"size":3526,"mtime":1652620484104,"results":"13","hashOfConfig":"9"},{"size":6736,"mtime":1652619647375,"results":"14","hashOfConfig":"9"},{"size":5650,"mtime":1652620487032,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"2566r3",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"19"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\Dumbgram\\client\\src\\index.js",[],[],[],"D:\\Project\\Dumbgram\\client\\src\\App.js",["42"],[],"import { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\n\nimport LandingPage from \"./Pages/LandingPage\";\nimport Home from \"./Pages/Home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/landingPage\" element={<LandingPage />} />\n        <Route path=\"/home\" element={<Home />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","D:\\Project\\Dumbgram\\client\\src\\Pages\\LandingPage.jsx",["43","44","45"],[],"import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LandingPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    const data = { email: email, password: password, name: name };\r\n    axios.post(\"http://localhost:3001/auth/register\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.data.token);\r\n        if (response.data.status == \"Success\") {\r\n          navigate(\"/home\");\r\n        }\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const data = { email: email, password: password };\r\n    axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.data.token);\r\n\r\n        if (response.data.status == \"Success\") {\r\n          navigate(\"/home\");\r\n        }\r\n\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black h-screen\">\r\n      <div className=\"grid grid-rows-2 gap-4 grid-cols-12\">\r\n        <div className=\"col-span-5\">\r\n          <div className=\"ml-16\">\r\n            <img className=\"mt-20\" src=\"images/logo.png\" alt=\"\" />\r\n            <img className=\"mt-10\" src=\"images/desc.png\" alt=\"\" />\r\n            <img className=\"mt-5\" src=\"images/text.png\" alt=\"\" />\r\n          </div>\r\n          <div className=\"flex ml-16\">\r\n            <div className=\"mt-10\">\r\n              <label\r\n                for=\"my-modal-4\"\r\n                className=\"btn modal-button background px-8 mr-8\"\r\n              >\r\n                <p className=\"text-gray-200 font-bold\">Sign In</p>\r\n              </label>\r\n            </div>\r\n            <input type=\"checkbox\" id=\"my-modal-4\" className=\"modal-toggle\" />\r\n            <label for=\"my-modal-4\" className=\"modal cursor-pointer\">\r\n              <label className=\"modal-box relative\" for=\"\">\r\n                <h3 class=\"text-4xl font-bold ml-10\">Login</h3>\r\n                <div className=\"flex justify-center\">\r\n                  <form className=\"text-center\">\r\n                    <div className=\"mt-12\">\r\n                      <input\r\n                        onChange={(event) => {\r\n                          setEmail(event.target.value);\r\n                        }}\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                      ></input>\r\n                      <input\r\n                        onChange={(event) => {\r\n                          setPassword(event.target.value);\r\n                        }}\r\n                        type=\"text\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                      ></input>\r\n                      <div className=\"flex justify-center mt-12\">\r\n                        <button\r\n                          onClick={login}\r\n                          className=\"background px-8 py-2 rounded-md w-96\"\r\n                        >\r\n                          <p className=\"text-xl text-gray-200 font-bold\">\r\n                            Login\r\n                          </p>\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"mt-8\">\r\n                        <p className=\"font-bold text-xl cursor-pointer\">\r\n                          Don't have and account? Click Here\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </label>\r\n            </label>\r\n            <div className=\"mt-10\">\r\n              <label\r\n                for=\"my-modal-5\"\r\n                className=\"btn modal-button bg-gray-800 px-8 py-2\"\r\n              >\r\n                <p className=\"font-bold text-gray-200 mt-1\">Sign Up</p>\r\n              </label>\r\n              <input type=\"checkbox\" id=\"my-modal-5\" className=\"modal-toggle\" />\r\n              <label for=\"my-modal-5\" className=\"modal cursor-pointer\">\r\n                <label className=\"modal-box relative\" for=\"\">\r\n                  <h3 class=\"text-4xl font-bold ml-10\">Register</h3>\r\n                  <div className=\"flex justify-center\">\r\n                    <form className=\"text-center\">\r\n                      <div className=\"mt-12\">\r\n                        <input\r\n                          onChange={(event) => {\r\n                            setEmail(event.target.value);\r\n                          }}\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          placeholder=\"Email\"\r\n                          className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                        ></input>\r\n                        <input\r\n                          onChange={(event) => {\r\n                            setPassword(event.target.value);\r\n                          }}\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          placeholder=\"Password\"\r\n                          className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                        ></input>\r\n                        <input\r\n                          onChange={(event) => {\r\n                            setName(event.target.value);\r\n                          }}\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          placeholder=\"Name\"\r\n                          className=\"text-gray-800 px-4 placeholder:text-gray-700 font-semibold py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                        ></input>\r\n                        <div className=\"flex justify-center mt-12\">\r\n                          <button\r\n                            onClick={register}\r\n                            className=\"background px-8 py-2 rounded-md w-96\"\r\n                          >\r\n                            <p className=\"text-xl text-gray-200 font-bold\">\r\n                              Register\r\n                            </p>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"mt-8\">\r\n                          <label for=\"my-modal-4\">\r\n                            <p className=\"font-bold text-xl cursor-pointer\">\r\n                              Already have an account? Click here\r\n                            </p>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </label>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-7\">\r\n          <img className=\"mt-6\" src=\"images/landingpage.png\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","D:\\Project\\Dumbgram\\client\\src\\Pages\\Home.jsx",["46","47","48","49","50","51","52"],[],"import React from \"react\";\r\nimport Header from \"../Components/Header\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport \"../App.css\";\r\nimport useNavigate from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [listOfPost, setListOfPost] = useState([]);\r\n  const [searchPost, setSearchPost] = useState(\"\");\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/post\").then((response) => {\r\n      console.log(response.data);\r\n      setListOfPost(response.data);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    const loadPost = async () => {\r\n      setLoading(true);\r\n      const response = await axios.get(\"http://localhost:3001/post\");\r\n      setListOfPost(response.data);\r\n      setLoading(false);\r\n    };\r\n    loadPost();\r\n  }, []);\r\n\r\n  const masonryOptions = {\r\n    fitWidth: false,\r\n    columnWidth: 0,\r\n    gutter: 0,\r\n    itemSelector: \".photo-item\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-black h-full\">\r\n      <div className=\" grid grid-rows-2 gap-4 grid-cols-12\">\r\n        <div className=\"col-span-3 border-r-2 border-gray-900\">\r\n          <Navbar />\r\n        </div>\r\n\r\n        <div className=\"col-span-9 relative ml-20\">\r\n          <div className=\"flex justify-end mr-5\">\r\n            <Header />\r\n          </div>\r\n\r\n          <div className=\"flex mb-10\">\r\n            <p className=\"text-5xl text-gray-200 font-bold\">Feed</p>\r\n            {/* <div className=\"mt-5\">\r\n              <input\r\n                className=\"ml-40 bg-gray-800 w-96 h-10 rounded-md px-4\"\r\n                type=\"text\"\r\n                placeholder=\"Search ...\"\r\n                onChange={(e) => {\r\n                  setSearchPost(e.target.value);\r\n                }}\r\n              ></input>\r\n            </div> */}\r\n          </div>\r\n          <div className=\"relative\">\r\n            <Masonry\r\n              className={\"photo-list\"}\r\n              elementType={\"ul\"}\r\n              options={masonryOptions}\r\n              disableImagesLoaded={false}\r\n              updateOnEachImageLoad={false}\r\n              // imagesLoadedOptions={imagesLoadedOptions} // default {}\r\n            >\r\n              {listOfPost.map((listOfPost) => {\r\n                return (\r\n                  <div key={listOfPost.id} className={`photo-item`}>\r\n                    <img\r\n                      className=\"rounded-md mt-3\"\r\n                      src={`http://localhost:3001/${listOfPost.image}`}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Masonry>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n{\r\n  /* {listOfPost.map((listOfPost) => {\r\n              return (\r\n                <div key={listOfPost.id} className=\"columns-4\">\r\n                  <img src={`http://localhost:3001/${listOfPost.image}`} />\r\n                  <p className=\"text-gray-100\">{listOfPost.caption}</p>\r\n                </div>\r\n              );\r\n            })} */\r\n}\r\n\r\n{\r\n  /* <div>\r\n            <div>\r\n              {listOfPost\r\n                .filter((value) => {\r\n                  if (searchPost === \"\") {\r\n                    return value;\r\n                  } else if (\r\n                    value.title.toLowerCase().includes(searchPost.toLowerCase())\r\n                  ) {\r\n                    return value;\r\n                  }\r\n                })\r\n                .map((listOfPost) => {\r\n                  return (\r\n                    <div key={listOfPost.id} className=\"\">\r\n                      <img src={`http://localhost:3001/${listOfPost.image}`} />\r\n                      <p className=\"text-gray-100\">{listOfPost.caption}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div> */\r\n}\r\n","D:\\Project\\Dumbgram\\client\\src\\Components\\Header.jsx",["53","54","55","56","57"],[],"D:\\Project\\Dumbgram\\client\\src\\Components\\Navbar.jsx",["58","59","60","61","62"],[],"import React from \"react\";\r\nimport {\r\n  PencilAltIcon,\r\n  HomeIcon,\r\n  GlobeAltIcon,\r\n  LogoutIcon,\r\n} from \"@heroicons/react/solid\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport Profile from \"./Profile\";\r\n\r\nfunction Navbar() {\r\n  const [preview, setPreview] = useState(null);\r\n  const [profile, setProfile] = useState([]);\r\n\r\n  const [form, setForm] = useState({\r\n    caption: \"\",\r\n    image: \"\",\r\n    bio: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]:\r\n        e.target.type === \"file\" ? e.target.files : e.target.value,\r\n    });\r\n\r\n    if (e.target.type === \"file\") {\r\n      let url = URL.createObjectURL(e.target.files[0]);\r\n      setPreview(url);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      const data = new FormData();\r\n      data.set(\"name\", form.name);\r\n      data.set(\"username\", form.username);\r\n      data.set(\"bio\", form.bio);\r\n      data.set(\"image\", form.image[0], form.image[0].name);\r\n\r\n      axios\r\n        .post(\"http://localhost:3001/profile\", data, {\r\n          // headers: {\r\n          //   accessToken: localStorage.getItem(\"accessToken\"),\r\n          // },\r\n        })\r\n        .then((response) => {\r\n          //   const postToAdd = { caption: caption, image: image };\r\n          //   set([...account, accountToAdd]);\r\n          // });\r\n          console.log(response.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/profile\").then((response) => {\r\n      console.log(response.data);\r\n      setProfile(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ml-5 bg-dark1\">\r\n      <div className=\"cursor-pointer\">\r\n        <div className=\"ml-10 mt-8\">\r\n          <img\r\n            className=\"h-12 mr-60 cursor-pointer\"\r\n            src=\"images/logo.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <Profile />\r\n        {/* <div className=\"flex justify-end\">\r\n          <label for=\"my-modal-6\" className=\"btn modal-button mt-12 mr-3\">\r\n            <PencilAltIcon className=\"h-8\" />\r\n          </label>\r\n        </div> */}\r\n        {/* <input type=\"checkbox\" id=\"my-modal-6\" className=\"modal-toggle\" />\r\n        <label for=\"my-modal-6\" class=\"modal cursor-pointer\">\r\n          <label class=\"modal-box relative\" for=\"\">\r\n            <h3 class=\"text-3xl font-bold\">Edit Profile</h3>\r\n            <div className=\"mt-5 rounded-full background w-32 h-32\">\r\n              {preview && (\r\n                <div className=\" \">\r\n                  <img\r\n                    className=\"rounded-full w-32 h-32 object-cover\"\r\n                    src={preview}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"mt-10\">\r\n                <input\r\n                  onChange={handleChange}\r\n                  multiple=\"multiple\"\r\n                  name=\"image\"\r\n                  type=\"file\"\r\n                ></input>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  className=\"bg-gray-800 text-gray-200 rounded-lg mt-10 h-12 w-80 px-4\"\r\n                ></input>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  className=\"bg-gray-800 text-gray-200 rounded-lg mt-2 h-12 w-80 px-4\"\r\n                ></input>\r\n                <input\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  name=\"bio\"\r\n                  placeholder=\"Bio\"\r\n                  className=\"bg-gray-800 text-gray-200 rounded-lg mt-2 h-12 w-80 px-4\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <button\r\n                  onSubmit={onSubmit}\r\n                  for=\"my-modal-4\"\r\n                  className=\"btn mt-2 background \"\r\n                >\r\n                  <p className=\"text-gray-200 w-24\">Submit</p>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </label>\r\n        </label> */}\r\n      </div>\r\n      {/* \r\n      {profile.map((profile) => {\r\n        return (\r\n          <div key={profile.id}>\r\n            <div className=\"flex justify-center \">\r\n              <img\r\n                className=\"border-4 border-emerald-400 rounded-full h-32 w-32 object-cover\"\r\n                src={`http://localhost:3001/${profile.image}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-gray-200 mt-5 font-bold text-2xl text-center\">\r\n                {profile.name}\r\n              </p>\r\n            </div>\r\n            <div className=\"mt-2 text-xl text-gray-200 text-center\">\r\n              <p>@{profile.username}</p>\r\n            </div>\r\n\r\n            <div className=\"mt-10 grid grid-rows-2 gap-4 grid-cols-12\">\r\n              <div className=\"col-span-4\">\r\n                <div>\r\n                  <p className=\"text-2xl text-gray-200\">Post</p>\r\n                  <p className=\"text-lg text-gray-200\">276</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-span-4\">\r\n                <div>\r\n                  <p className=\"text-2xl text-gray-200\">Follower</p>\r\n                  <p className=\"text-gray-200 text-lg\">203.908</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-span-4\">\r\n                <div>\r\n                  <p className=\"text-2xl text-gray-200\">Following</p>\r\n                  <p className=\"text-gray-200 text-lg\">420</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <p className=\"text-xl text-gray-200\">{profile.bio}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })} */}\r\n\r\n      <div className=\" mt-20\">\r\n        <div className=\"flex justify-start cursor-pointer\">\r\n          <HomeIcon className=\"h-12\" />\r\n          <p className=\"font-semibold ml-10 mt-3\">Home</p>\r\n        </div>\r\n        <div className=\"flex justify-start mt-10 cursor-pointer\">\r\n          <GlobeAltIcon className=\"h-12\" />\r\n          <p className=\"font-semibold ml-10 mt-3\">Explore</p>\r\n        </div>\r\n        <div className=\"flex justify-start mt-40 cursor-pointer\">\r\n          <LogoutIcon className=\"h-12\" />\r\n          <p className=\"font-semibold ml-10 mt-3\">Logout</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Project\\Dumbgram\\client\\src\\Components\\Profile.jsx",["63","64","65","66"],[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":40,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"71","line":3,"column":20,"nodeType":"69","messageId":"70","endLine":3,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":22,"column":34,"nodeType":"74","messageId":"75","endLine":22,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":39,"column":34,"nodeType":"74","messageId":"75","endLine":39,"endColumn":36},{"ruleId":"67","severity":1,"message":"76","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":19},{"ruleId":"67","severity":1,"message":"77","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":17},{"ruleId":"67","severity":1,"message":"78","line":13,"column":10,"nodeType":"69","messageId":"70","endLine":13,"endColumn":20},{"ruleId":"67","severity":1,"message":"79","line":13,"column":22,"nodeType":"69","messageId":"70","endLine":13,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":74,"column":21,"nodeType":"82","endLine":77,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":91,"column":1,"nodeType":"85","messageId":"86","endLine":100,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":102,"column":1,"nodeType":"85","messageId":"86","endLine":125,"endColumn":2},{"ruleId":"67","severity":1,"message":"71","line":3,"column":20,"nodeType":"69","messageId":"70","endLine":3,"endColumn":29},{"ruleId":"67","severity":1,"message":"87","line":8,"column":7,"nodeType":"69","messageId":"70","endLine":8,"endColumn":15},{"ruleId":"67","severity":1,"message":"88","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":20},{"ruleId":"67","severity":1,"message":"89","line":10,"column":22,"nodeType":"69","messageId":"70","endLine":10,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":88,"column":17,"nodeType":"82","endLine":88,"endColumn":73},{"ruleId":"67","severity":1,"message":"90","line":3,"column":3,"nodeType":"69","messageId":"70","endLine":3,"endColumn":16},{"ruleId":"67","severity":1,"message":"91","line":14,"column":10,"nodeType":"69","messageId":"70","endLine":14,"endColumn":17},{"ruleId":"67","severity":1,"message":"92","line":15,"column":10,"nodeType":"69","messageId":"70","endLine":15,"endColumn":17},{"ruleId":"67","severity":1,"message":"93","line":23,"column":9,"nodeType":"69","messageId":"70","endLine":23,"endColumn":21},{"ruleId":"67","severity":1,"message":"94","line":36,"column":9,"nodeType":"69","messageId":"70","endLine":36,"endColumn":17},{"ruleId":"67","severity":1,"message":"95","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":11},{"ruleId":"67","severity":1,"message":"96","line":5,"column":3,"nodeType":"69","messageId":"70","endLine":5,"endColumn":15},{"ruleId":"67","severity":1,"message":"97","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":80,"column":17,"nodeType":"82","endLine":83,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useNavigate' is defined but never used.","'loading' is assigned a value but never used.","'searchPost' is assigned a value but never used.","'setSearchPost' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'navigate' is assigned a value but never used.","'listOfPost' is assigned a value but never used.","'setListOfPost' is assigned a value but never used.","'PencilAltIcon' is defined but never used.","'preview' is assigned a value but never used.","'profile' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'HomeIcon' is defined but never used.","'GlobeAltIcon' is defined but never used.","'LogoutIcon' is defined but never used."]